<!DOCTYPE html>
<html lang="en">
<head>
  <title>IWP Async/Await Exercise</title>
  <meta charset="UTF-8">
<script>
function sleep(ms){
  return new Promise((resolve,reject) => setTimeout(resolve, ms));
};

async function asyncPrint(){
  await sleep(2000)
  console.log("Hej");
  await sleep(2000)
  console.log("IWP");
  await sleep(2000)
  console.log("I am done");
  return "ciao"
}

function clickHandler() {
	a = asyncPrint().then(b => console.log("b is " + b));
	console.log("a is " + a)

}

</script>
</head>
<body>
    <button type="button" id="buttonPromises" >Talk!</button>
</body>

<p>All the then()s can be removed if the asynchronous code does everything by means of side effects. However, if there is interest in the return values, there is still the need to call the then() on the Promise returned by calling the async function. See the HTML source code of this page for an example.</p>

<script>
document.getElementById("buttonPromises").addEventListener("click", clickHandler);
</script>
